/**
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e.,  [0,1,2,4,5,6,7] might become  [4,5,6,7,0,1,2]).

Find the minimum element.

You may assume no duplicate exists in the array.

Example 1:

Input: [3,4,5,1,2] 
Output: 1

Example 2:

Input: [4,5,6,7,0,1,2]
Output: 0


**/

class Solution {
    public int findMin(int[] nums) {
        if(nums.length == 0){
            return 0;
        }
        int start = 0; 
        int end = nums.length -1;
        
        while(start < end){
            int mid = start + (end - start)/2; 
            if(nums[mid] > nums[end]){ //If mid value is greater than the end, the smaller value is definitely on the right
             start = mid + 1;   
            }
            else{ //The smaller value is itself, or on the left 
                end = mid; //so i just take mid as right because it might be itself, no subtraction
             }
        }
        return nums[start];
    }
}

//  5 6 0 1 2 3 4
     
//  4 5 6 0 1 2 3
     
//  3 4 5 6 0 1 2     
